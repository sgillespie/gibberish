cabal-version:       3.4
name:                gibberish
version:             3.0.0
synopsis:            Generate easy-to-remember, hard-to-guess passwords
homepage:            https://www.github.com/sgillespie/gibberish
license:             MIT
license-file:        LICENSE
author:              Sean D Gillespie
maintainer:          sean@mistersg.net
category:            Cryptography
build-type:          Simple

description:
  Generates pronounceable passwords that are easy-to-remember and hard-to-guess.

extra-source-files:
  README.md,
  test/*.hs,
  test/Test/*.hs,
  test/Test/Elocrypt/*.hs

data-files:
  data/dicts/*.txt
  data/trigraphs/*.json

common common-options
  build-depends:
    base >=4.14 && <5,
    containers,
    mtl,
    text,
    text-show,
    transformers
  ghc-options:
    -Wall
    -Wcompat
    -- Not yet
    -- -Werror
    -Widentities
    -Wderiving-defaults
    -Wmissing-deriving-strategies
    -Wincomplete-uni-patterns
    -Wredundant-constraints
    -Wnoncanonical-monad-instances
    -fhide-source-paths
    -Wmissing-export-lists
    -Wpartial-fields
  default-extensions:
    DeriveAnyClass,
    DerivingStrategies,
    LambdaCase,
    OverloadedStrings,
    RecordWildCards
  other-extensions:
    OverloadedLists,
    TemplateHaskell
  default-language: GHC2021

common common-exe
  import:         common-options
  build-depends:
    base,
    gibberish,
    aeson,
    aeson-pretty,
    bytestring,
    optparse-applicative,
    random
  hs-source-dirs: app

common common-test
  import:         common-options
  build-depends:
    base,
    gibberish:{gibberish,testlib},
    MonadRandom,
    QuickCheck,
    aeson,
    aeson-pretty,
    bytestring,
    filepath,
    hedgehog,
    hedgehog,
    hspec,
    hspec-hedgehog,
    proctest,
    random,
    tasty,
    tasty-golden,
    tasty-hedgehog,
    tasty-quickcheck,
    tasty-th >= 0.1.7,
  hs-source-dirs: test

library
  import:          common-options
  exposed-modules:
    Data.Elocrypt,
    Data.Elocrypt.Trigraph,
    Data.Elocrypt.Utils,
    Data.Gibberish.Errors,
    Data.Gibberish.Format,
    Data.Gibberish.GenPass,
    Data.Gibberish.MonadPass,
    Data.Gibberish.Trigraph,
    Data.Gibberish.Types,
    Data.Gibberish.Utils
  other-modules:
    Paths_gibberish
  build-depends:
    MonadRandom,
    aeson,
    deepseq,
    directory,
    filepath,
    random
  hs-source-dirs:  src

executable gibber
  import:         common-exe
  main-is:        Main.hs
  other-modules:
    PackageInfo_gibberish
    Paths_gibberish
  hs-source-dirs: app

executable gibber-gen-trigraph
  import:         common-exe
  main-is:        gen-trigraph.hs
  hs-source-dirs: app

library testlib
  import:         common-options
  exposed-modules:
    Test.Gibberish.Gen
  build-depends:
    base >= 4.14 && < 5,
    gibberish,
    MonadRandom,
    hedgehog
  hs-source-dirs:
    testlib

test-suite test
  import:         common-test
  main-is:        Tests.hs
  other-modules:
    Paths_gibberish,
    Test.Elocrypt.Instances,
    Test.Elocrypt.QuickCheck,
    Test.Elocrypt.TrigraphTest,
    Test.Elocrypt.UtilsTest,
    Test.ElocryptTest,
  default-extensions:
    TemplateHaskell
  type:
    exitcode-stdio-1.0

test-suite spec
  import:         common-test
  main-is:        Spec.hs
  type:           exitcode-stdio-1.0
  build-tool-depends:
    hspec-discover:hspec-discover
  other-modules:
    Data.Gibberish.FormatSpec
    Data.Gibberish.GenPassSpec
    Data.Gibberish.TrigraphSpec
    Data.Gibberish.TypesSpec
    Data.Gibberish.UtilsSpec
    Paths_gibberish
  other-extensions:
    OverloadedLists

test-suite golden
  import:         common-test
  main-is:        Golden.hs
  other-modules:
    Paths_gibberish,
  type:
    exitcode-stdio-1.0

benchmark main
  import:         common-options
  build-depends:
    gibberish,
    aeson,
    criterion,
    deepseq,
    filepath

  type:           exitcode-stdio-1.0
  main-is:        Main.hs
  hs-source-dirs: bench
  other-modules:
    Paths_gibberish
